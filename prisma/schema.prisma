generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  vorname   String
  nachname  String
  passwort  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  accounts     Account[]
  sessions     Session[]
  calculations Calculation[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Calculation {
  id          String   @id @default(uuid())
  userId      String
  name        String   @default("Neue Berechnung")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Objektdaten
  adresse                String?
  etage                  String?
  wohnflaeche           Float?
  stellplatz            String?
  wohnungsnummer        String?
  
  // Kaufpreise
  kaufpreis_wohnung     Float?
  kaufpreis_stellplatz  Float?
  grundstuecksanteil_prozent Float?
  
  // Nebenkosten
  makler_prozent        Float?
  notar_prozent         Float?
  grundbuch_prozent     Float?
  grunderwerbsteuer_prozent Float?
  sonstige_prozent      Float?
  
  // Finanzierung
  eigenkapital          Float?
  realkredit_zinssatz   Float?
  realkredit_tilgung    Float?
  realkredit_zinsbindung Int?
  foerderdarlehen       Float?
  foerderung_zinssatz   Float?
  foerderung_tilgung    Float?
  foerderung_zinsbindung Int?
  
  // Mieteinnahmen
  kaltmiete_pro_qm      Float?
  stellplatz_miete_monatlich Float?
  sonstige_mieteinnahmen Float?
  
  // Bewirtschaftungskosten
  hausgeld_umlagefaehig Float?
  hausgeld_nicht_umlagefaehig Float?
  instandhaltungsruecklage Float?
  sonstige_bewirtschaftung Float?
  
  // Steuerliche Daten
  zu_versteuerndes_einkommen Float?
  steuersatz            Float?
  abschreibung_prozent  Float?
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
